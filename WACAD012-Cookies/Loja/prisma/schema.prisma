// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Product {
  id String @id @default(uuid()) @db.Char(36)
  name String @unique @db.VarChar(100)
  description String @db.Text
  image String @db.VarChar(200)
  price Decimal @db.Decimal(10, 2)
  stock Int @db.Int()
  status Int @db.TinyInt
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  PurchaseItem PurchaseItem[]
}

model Purchase {
  id String @id @default(uuid()) @db.Char(36)
  status Int @db.TinyInt
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Items PurchaseItem[]
}

model PurchaseItem {
  id String @id @default(uuid()) @db.Char(36)
  quantity Int @db.Int()
  productId String @db.Char(36)
  product Product @relation(fields: [productId], references: [id])
  purchaseId String @db.Char(36)
  purchase Purchase @relation(fields: [purchaseId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([productId, purchaseId])
}

model UserType {
  id Int @id @db.Int()
  label String @db.Char(10)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  users User[]
}
model User {
  id String @id @default(uuid()) @db.Char(40)
  name String @db.VarChar(100)
  email String @unique @db.VarChar(100)
  password String @db.Char(70)
  status Int @db.TinyInt
  typeId Int @db.Int()
  type UserType @relation(fields: [typeId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}