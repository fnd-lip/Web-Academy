
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Categoria {
  id_categoria   Int            @id @default(autoincrement())
  nome           String         @db.VarChar(50)
  subcategorias  Subcategoria[]
}

model Cliente {
  id_cliente      Int        @id @default(autoincrement())
  nome            String     @db.VarChar(100)
  cpf             String     @unique @db.Char(11)
  celular         String?    @db.VarChar(15)
  email           String?    @unique @db.VarChar(100)
  data_nascimento DateTime?  @db.Date
  enderecos       Endereco[]
  compras         Compra[]
}

model Endereco {
  id_endereco Int     @id @default(autoincrement())
  logradouro  String  @db.VarChar(150)
  numero      String? @db.VarChar(10)
  complemento String? @db.VarChar(50)
  cidade      String? @db.VarChar(80)
  estado      String? @db.Char(2)
  cep         String? @db.Char(8)
  id_cliente  Int
  cliente     Cliente @relation(fields: [id_cliente], references: [id_cliente])
  compras     Compra[]
}

model Compra {
  id_compra       Int          @id @default(autoincrement())
  data_hora       DateTime     @db.DateTime(0)
  desconto        Decimal?     @default(0.00) @db.Decimal(5, 2)
  forma_pagamento String       @db.VarChar(50)
  total           Decimal      @db.Decimal(10, 2)
  id_cliente      Int
  id_endereco     Int
  cliente         Cliente      @relation(fields: [id_cliente], references: [id_cliente])
  endereco        Endereco     @relation(fields: [id_endereco], references: [id_endereco])
  itens           ItemCompra[]
}

model Subcategoria {
  id_subcategoria Int        @id @default(autoincrement())
  nome            String     @db.VarChar(50)
  id_categoria    Int
  categoria       Categoria  @relation(fields: [id_categoria], references: [id_categoria])
  produtos        Produto[]
}

model Produto {
  id_produto            Int            @id @default(autoincrement())
  modelo                String         @db.VarChar(100)
  fabricante            String?        @db.VarChar(100)
  preco_base            Decimal        @db.Decimal(10, 2)
  quantidade_disponivel Int?           @default(0)
  id_subcategoria       Int
  subcategoria          Subcategoria   @relation(fields: [id_subcategoria], references: [id_subcategoria])
  itens                 ItemCompra[]
  numerosSerie          NumeroSerie[]
}

model ItemCompra {
  id_compra     Int
  id_produto    Int
  quantidade    Int
  preco_unitario Decimal @db.Decimal(10, 2)

  compra   Compra  @relation(fields: [id_compra], references: [id_compra], onDelete: Cascade, onUpdate: Cascade)
  produto  Produto @relation(fields: [id_produto], references: [id_produto], onDelete: Restrict, onUpdate: Cascade)

  @@id([id_compra, id_produto])
}

model NumeroSerie {
  id_numero_serie Int     @id @default(autoincrement())
  numero_serie    String  @unique @db.VarChar(50)
  id_produto      Int
  produto         Produto @relation(fields: [id_produto], references: [id_produto])
}